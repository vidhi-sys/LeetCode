/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
    l1=reverseLL(l1);
        l2=reverseLL(l2);
        ListNode dummy= new ListNode(0);
        ListNode current=dummy;
       int carry=0;
       while(l1!=null||l2!=null|| carry!=0){
             int sum=carry;
           
           if(l1!=null){
           sum+=l1.val;
           l1=l1.next;
           }
           if(l2!=null){
               sum+=l2.val;
                l2=l2.next;
           }
         
          carry=sum/10;
          current.next=new ListNode( sum%10);
          current=current.next;
       }
       ListNode result= reverseLL(dummy.next);
       while(result!=null&& result.val==0&&result.next!=null){
           result=result.next;
       }
       return result !=null ?result:new ListNode(0);
        
    }
    private ListNode reverseLL(ListNode head){
        ListNode prev=null;
        ListNode current=head;
        while(current!=null){
            ListNode next=current.next;
            current.next=prev;
            prev=current;
            current=next;
        }
        return prev;
    }
}
